800182d4 <fast_tlb_refill>:
fast_tlb_refill():
/home/git/21373271/21373271/kern/tlbex.c:74

Pte fast_tlb_refill(u_long va, u_int asid) {
800182d4:	27bdffd8 	addiu	sp,sp,-40
800182d8:	afbf0024 	sw	ra,36(sp)
800182dc:	afbe0020 	sw	s8,32(sp)
800182e0:	03a0f025 	move	s8,sp
800182e4:	afc40028 	sw	a0,40(s8)
800182e8:	afc5002c 	sw	a1,44(s8)
/home/git/21373271/21373271/kern/tlbex.c:75
	error_count++;
800182ec:	3c028014 	lui	v0,0x8014
800182f0:	8c428050 	lw	v0,-32688(v0)
800182f4:	00000000 	nop
800182f8:	24430001 	addiu	v1,v0,1
800182fc:	3c028014 	lui	v0,0x8014
80018300:	ac438050 	sw	v1,-32688(v0)
/home/git/21373271/21373271/kern/tlbex.c:76
	int context = -1;
80018304:	2402ffff 	li	v0,-1
80018308:	afc20010 	sw	v0,16(s8)
/home/git/21373271/21373271/kern/tlbex.c:77
	int memEntryHi = -1;
8001830c:	2402ffff 	li	v0,-1
80018310:	afc20014 	sw	v0,20(s8)
/home/git/21373271/21373271/kern/tlbex.c:78
	asm("mfc0 %0, $10" : "=r"(memEntryHi) :);
80018314:	40025000 	mfc0	v0,c0_entryhi
80018318:	00000000 	nop
8001831c:	afc20014 	sw	v0,20(s8)
/home/git/21373271/21373271/kern/tlbex.c:80
	//printk("TLB quickly refills, and the value of EntryHi for the first test is: %08x\n",memEntryHi);
	asm("mfc0 %0, $4" : "=r"(context) :);
80018320:	40022000 	mfc0	v0,c0_context
80018324:	00000000 	nop
80018328:	afc20010 	sw	v0,16(s8)
/home/git/21373271/21373271/kern/tlbex.c:81
	int badVaddr = -1;
8001832c:	2402ffff 	li	v0,-1
80018330:	afc20018 	sw	v0,24(s8)
/home/git/21373271/21373271/kern/tlbex.c:82
	asm("mfc0 %0, $8" : "=r"(badVaddr) :);
80018334:	40024000 	mfc0	v0,c0_badvaddr
80018338:	00000000 	nop
8001833c:	afc20018 	sw	v0,24(s8)
/home/git/21373271/21373271/kern/tlbex.c:93
	//printk("Context : %08x\n",context);
	//printk("TableNum : %08x\n",TableNum);
	//printk("mpt[TableNum] : %08x\n",&(mpt[TableNum]));
	//printk("mpt[0] : %08x\n",&(mpt[0]));
	//printk("mpt[1] : %08x\n",&(mpt[1]));
	Pte* pte = (Pte *)context;
80018340:	8fc20010 	lw	v0,16(s8)
80018344:	00000000 	nop
80018348:	afc2001c 	sw	v0,28(s8)
/home/git/21373271/21373271/kern/tlbex.c:98
	//printk("pte : %08x\n",*pte);
	//u_int* inst = (u_int *)(KADDR((*pte) & 0xffff000) + (va & 0xfff));
	//printk("inst : %08x\n",inst);
	//printk("inst : %08x\n",*inst);
	while ( ((*pte) & PTE_V) == 0 )
8001834c:	10000008 	b	80018370 <fast_tlb_refill+0x9c>
80018350:	00000000 	nop
/home/git/21373271/21373271/kern/tlbex.c:101
       	{
		//printk("Alloc ?????????????????????????????????????????????????????????????????????\n");
		passive_alloc(va,cur_pgdir,asid);
80018354:	3c028014 	lui	v0,0x8014
80018358:	8c428024 	lw	v0,-32732(v0)
8001835c:	8fc6002c 	lw	a2,44(s8)
80018360:	00402825 	move	a1,v0
80018364:	8fc40028 	lw	a0,40(s8)
80018368:	0c005ff0 	jal	80017fc0 <passive_alloc>
8001836c:	00000000 	nop
/home/git/21373271/21373271/kern/tlbex.c:98
	while ( ((*pte) & PTE_V) == 0 )
80018370:	8fc2001c 	lw	v0,28(s8)
80018374:	00000000 	nop
80018378:	8c420000 	lw	v0,0(v0)
8001837c:	00000000 	nop
80018380:	30420200 	andi	v0,v0,0x200
80018384:	1040fff3 	beqz	v0,80018354 <fast_tlb_refill+0x80>
80018388:	00000000 	nop
/home/git/21373271/21373271/kern/tlbex.c:105
	}	
	//asm("mfc0 %0, $10" : "=r"(memEntryHi) :);
	//printk("TLB quickly refills, and the value of EntryHi for the second test is: %08x\n",memEntryHi);
	asm volatile("mtc0 %0, $10" : : "r"(memEntryHi));
8001838c:	8fc20014 	lw	v0,20(s8)
80018390:	00000000 	nop
80018394:	40825000 	mtc0	v0,c0_entryhi
/home/git/21373271/21373271/kern/tlbex.c:107
	//printk("fast_tlb Done!\n");
	return *pte; 
80018398:	8fc2001c 	lw	v0,28(s8)
8001839c:	00000000 	nop
800183a0:	8c420000 	lw	v0,0(v0)
/home/git/21373271/21373271/kern/tlbex.c:108
}
800183a4:	03c0e825 	move	sp,s8
800183a8:	8fbf0024 	lw	ra,36(sp)
800183ac:	8fbe0020 	lw	s8,32(sp)
800183b0:	27bd0028 	addiu	sp,sp,40
800183b4:	03e00008 	jr	ra
800183b8:	00000000 	nop

